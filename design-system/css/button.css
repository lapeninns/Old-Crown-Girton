/* Button CSS built from design-system/tokens/button-tokens.json
   Minimal, token-based classes for buttons. Uses CSS variables defined globally (see theme/colors.js -> app/globals.css)
*/

/* This stylesheet expects the project's CSS variables (from theme/colors.js -> app/globals.css)
  to be available at runtime. We avoid duplicating variables here; only semantic overrides
  for dark-mode button styles are provided below to align with token choices.
*/

.ds-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  min-height: 44px;
  padding: 12px 24px;
  border-radius: 8px;
  font-weight: 600;
  transition: background-color 160ms ease, color 160ms ease, transform 120ms ease;
}

.ds-button:focus {
  outline: none;
  box-shadow: 0 0 0 4px var(--color-primary); /* uses token ringColor */
}

.ds-button--sm { min-height: 36px; padding: 8px 16px; font-size: 14px; }
.ds-button--md { min-height: 44px; padding: 12px 24px; font-size: 16px; }
.ds-button--lg { min-height: 56px; padding: 16px 32px; font-size: 18px; }

/* Variants */
.ds-button--primary { background: var(--color-primary); color: #fff; border: 1px solid transparent; }
.ds-button--primary:hover { background: var(--color-primaryAccent); }

.ds-button--secondary { background: var(--color-secondary); color: #fff; border: 1px solid transparent; }
.ds-button--secondary:hover { background: var(--color-secondary-700); }

.ds-button--accent { background: var(--color-crimson-500); color: #fff; border: 1px solid transparent; }
.ds-button--accent:hover { background: var(--color-crimson-600); }

.ds-button--outline { background: transparent; color: var(--color-primary); border: 1px solid var(--color-primary); }
.ds-button--outline:hover { background: var(--color-primary); color: #fff; }

.ds-button--ghost { background: transparent; color: var(--color-primary); }
.ds-button--ghost:hover { background: rgba(0,0,0,0.04); }

.ds-button--link { background: transparent; color: var(--color-primary); text-decoration: underline; padding: 0.25rem 0.25rem; border: none; }
.ds-button--link:hover { color: var(--color-primaryAccent); }

.ds-button--destructive { background: var(--color-crimson-600); color: #fff; }
.ds-button--destructive:hover { background: var(--color-crimson-700); }

/* Disabled */
.ds-button[disabled], .ds-button--disabled { opacity: 0.5; cursor: not-allowed; pointer-events: none; }

/* Utility */
.ds-button--full { width: 100%; }

/* Icon-only (ensure accessible sizing) */
.ds-button--icon { padding: 0.5rem; min-width: 44px; height: 44px; }

/* Dark-mode specific overrides to ensure sufficient contrast for white foreground */
html.dark .ds-button--primary { background: var(--color-brass-700); color: #ffffff; }
html.dark .ds-button--primary:hover { background: var(--color-brass-800); }
html.dark .ds-button--secondary { background: var(--color-chakra-700); color: #ffffff; }
html.dark .ds-button--secondary:hover { background: var(--color-chakra-800); }
html.dark .ds-button--accent { background: var(--color-crimson-700); color: #ffffff; }
html.dark .ds-button--accent:hover { background: var(--color-crimson-800); }
html.dark .ds-button--destructive { background: var(--color-crimson-700); color: #ffffff; }
html.dark .ds-button--destructive:hover { background: var(--color-crimson-800); }

/* DaisyUI may toggle theme via `data-theme="dark"` on the root element (often `:root` or `html`).
  Mirror the `html.dark` overrides with a data-theme selector so buttons keep sufficient contrast
  when a theme is applied using `data-theme="dark"` (DaisyUI / theme toggles).
*/
:root[data-theme='dark'] .ds-button--primary { background: var(--color-brass-700); color: #ffffff; }
:root[data-theme='dark'] .ds-button--primary:hover { background: var(--color-brass-800); }
:root[data-theme='dark'] .ds-button--secondary { background: var(--color-chakra-700); color: #ffffff; }
:root[data-theme='dark'] .ds-button--secondary:hover { background: var(--color-chakra-800); }
:root[data-theme='dark'] .ds-button--accent { background: var(--color-crimson-700); color: #ffffff; }
:root[data-theme='dark'] .ds-button--accent:hover { background: var(--color-crimson-800); }
:root[data-theme='dark'] .ds-button--destructive { background: var(--color-crimson-700); color: #ffffff; }
:root[data-theme='dark'] .ds-button--destructive:hover { background: var(--color-crimson-800); }

/* Be robust against where data-theme might be applied (html, :root or other ancestor). */
[data-theme='dark'] .ds-button--primary { background: var(--color-brass-700); color: #ffffff; }
[data-theme='dark'] .ds-button--primary:hover { background: var(--color-brass-800); }
[data-theme='dark'] .ds-button--secondary { background: var(--color-chakra-700); color: #ffffff; }
[data-theme='dark'] .ds-button--secondary:hover { background: var(--color-chakra-800); }
[data-theme='dark'] .ds-button--accent { background: var(--color-crimson-700); color: #ffffff; }
[data-theme='dark'] .ds-button--accent:hover { background: var(--color-crimson-800); }
[data-theme='dark'] .ds-button--destructive { background: var(--color-crimson-700); color: #ffffff; }
[data-theme='dark'] .ds-button--destructive:hover { background: var(--color-crimson-800); }

/* Also cover html[data-theme='dark'] specifically to be exhaustive */
html[data-theme='dark'] .ds-button--primary { background: var(--color-brass-700); color: #ffffff; }
html[data-theme='dark'] .ds-button--primary:hover { background: var(--color-brass-800); }
html[data-theme='dark'] .ds-button--secondary { background: var(--color-chakra-700); color: #ffffff; }
html[data-theme='dark'] .ds-button--secondary:hover { background: var(--color-chakra-800); }
html[data-theme='dark'] .ds-button--accent { background: var(--color-crimson-700); color: #ffffff; }
html[data-theme='dark'] .ds-button--accent:hover { background: var(--color-crimson-800); }
html[data-theme='dark'] .ds-button--destructive { background: var(--color-crimson-700); color: #ffffff; }
html[data-theme='dark'] .ds-button--destructive:hover { background: var(--color-crimson-800); }

/* Respect users' reduced-motion preference even if Tailwind motion utilities are not present. */
@media (prefers-reduced-motion: reduce) {
  .animate-spin { animation: none !important; }
}
